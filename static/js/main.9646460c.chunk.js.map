{"version":3,"sources":["assets/images/auchan.png","assets/images/velmart.png","assets/images/silpo.png","assets/images/novus.png","components/common/Header/Header.jsx","components/Content/Todo/AddItem/AdditionalActions/AdditionalActions.jsx","components/Content/Todo/AddItem/AddItem.jsx","components/Content/Todo/TodoList/TodoItem/TodoItem.jsx","redux/marketsReducer.js","components/Content/Todo/TodoList/TodoItem/TodoItemContainer.jsx","components/Content/Todo/TodoList/TodoList.jsx","components/Content/Todo/Todo.jsx","redux/inputReducer.js","components/Content/Todo/TodoContainer.jsx","components/Content/Content.jsx","components/Content/Home/Home.jsx","components/Content/ContentContainer.jsx","App.js","serviceWorker.js","redux/store.js","index.js"],"names":["module","exports","Header","props","className","bgColorClass","to","market","logo","id","role","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","type","onClick","clearTodoListAC","marketName","saveToLSAC","calcSum","AddItem","onSubmit","event","preventDefault","addItem","input","form","title","value","onSubmitTodoAC","placeholder","required","onChange","onChangeAC","target","AdditionalActions","TodoItem","todo","completed","checked","setTodoCompletedAC","removeTodoAC","setTodoIdAC","SAVE_TO_LS","initState","auchan","velmart","silpo","novus","other","marketsReducer","state","action","localStorage","getItem","setItem","JSON","stringify","parse","length","filter","map","index","alert","reduce","sum","item","connect","ownProps","markets","TodoList","TodoItemContainer","key","Todo","addItemAC","inputReducer","dataName","data","Content","TodoContainer","Home","ContentContainer","this","setTodosAC","createImg","path","src","alt","match","params","auchanLogo","velmartLogo","silpoLogo","novusLogo","React","Component","withRouter","App","component","Boolean","window","location","hostname","reducers","combineReducers","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kGAAAA,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,2MCyB5BC,EAtBF,SAAAC,GACT,OACI,yBAAKC,UAAS,+BAA0BD,EAAME,eAC1C,kBAAC,IAAD,CAASD,UAAU,eAAeE,GAAE,WAAMH,EAAMI,SAAWJ,EAAMK,MAE7D,yBAAKJ,UAAU,sBACX,yBAAKA,UAAU,qBACX,kBAAC,IAAD,CAASA,UAAU,kCAAkCE,GAAG,IAAIG,GAAG,iBAAiBC,KAAK,SAASC,cAAY,WAAWC,gBAAc,OAAOC,gBAAc,SAAxJ,mBAEA,yBAAKT,UAAU,oCAAoCU,kBAAgB,kBAC/D,kBAAC,IAAD,CAASV,UAAU,gBAAgBE,GAAG,WAAtC,UACA,kBAAC,IAAD,CAASF,UAAU,iBAAiBE,GAAG,YAAvC,WACA,kBAAC,IAAD,CAASF,UAAU,iBAAiBE,GAAG,UAAvC,SACA,kBAAC,IAAD,CAASF,UAAU,iBAAiBE,GAAG,UAAvC,SACA,kBAAC,IAAD,CAASF,UAAU,iBAAiBE,GAAG,UAAvC,cCfb,WAACH,GAAD,OACX,yBAAKC,UAAU,iBACX,4BAAQW,KAAK,SAASX,UAAU,gBAC5BY,QAAS,WACLb,EAAMc,gBAAgBd,EAAMe,YAC5Bf,EAAMgB,eAHd,SAKA,4BAAQJ,KAAK,SAASX,UAAU,gBAC5BY,QAAS,WACLb,EAAMiB,QAAQjB,EAAMe,cAF5B,OAIA,yBAAKR,KAAK,YAAYN,UAAU,qBAChC,4BAAQW,KAAK,SAASX,UAAU,iBAAhC,YCqBOiB,EAhCD,SAAAlB,GACV,OACI,0BAAMC,UAAU,kCACZkB,SAAU,SAAAC,GACNA,EAAMC,iBACNrB,EAAMsB,QAAQtB,EAAMe,WAAYf,EAAMuB,MAAMC,KAAKC,MAAOzB,EAAMuB,MAAMC,KAAKE,OACzE1B,EAAM2B,iBACN3B,EAAMgB,eAEV,2BAAOJ,KAAK,OAAOX,UAAU,mBAAmB2B,YAAY,UAAUC,UAAQ,EAC1EH,MAAO1B,EAAMuB,MAAMC,KAAKC,MACxBK,SAAU,SAAAV,GAAK,OAAIpB,EAAM+B,WAAW,QAASX,EAAMY,OAAON,UAE9D,2BAAOd,KAAK,SAASX,UAAU,qBAAqB2B,YAAY,QAC5DF,MAAO1B,EAAMuB,MAAMC,KAAKE,MACxBI,SAAU,SAAAV,GAAK,OAAIpB,EAAM+B,WAAW,QAASX,EAAMY,OAAON,UAE9D,4BAAQd,KAAK,SAASX,UAAU,8FAA8FO,cAAY,WAAWC,gBAAc,OAAOC,gBAAc,SACpL,0BAAMT,UAAU,WAAhB,oBAGJ,kBAACgC,EAAD,CACInB,gBAAiBd,EAAMc,gBACvBE,WAAYhB,EAAMgB,WAClBD,WAAYf,EAAMe,WAClBE,QAASjB,EAAMiB,YCHhBiB,EAvBA,SAAAlC,GACX,OAAO,wBAAIC,UAAS,mCAA8BD,EAAMmC,KAAKC,WAAa,mBAClE,yBAAKnC,UAAU,iDACX,2BAAOW,KAAK,WACRX,UAAU,2BACVoC,QAASrC,EAAMmC,KAAKC,UACpBN,SAAU,SAAAV,GACNpB,EAAMsC,mBAAmBtC,EAAMe,WAAYf,EAAMmC,KAAK7B,IACtDN,EAAMgB,gBAGd,yBAAKf,UAAU,yBAA0BD,EAAMmC,KAAKV,OACpD,yBAAKxB,UAAU,4BAA4BD,EAAMmC,KAAKT,OACtD,yBAAKzB,UAAU,uDACX,uBAAGA,UAAU,2BAA2BY,QAAS,WAC7Cb,EAAMuC,aAAavC,EAAMe,WAAYf,EAAMmC,KAAK7B,IAChDN,EAAMwC,YAAYxC,EAAMe,YACxBf,EAAMgB,gBAJd,Q,sBCdVyB,EAAa,wBAQbC,EAAY,CACdC,OAAQ,GACRC,QAAS,GACTC,MAAO,GACPC,MAAO,GACPC,MAAO,IA2EIC,EAxEQ,WAAgC,IAA/BC,EAA8B,uDAAtBP,EAAWQ,EAAW,uCAClD,OAAQA,EAAOtC,MACX,IAjBU,YAkBN,OAAsC,OAAlCuC,aAAaC,QAAQ,UACrBD,aAAaE,QAAQ,QAASC,KAAKC,UAAUN,IACtCA,GAGJK,KAAKE,MAAML,aAAaC,QAAQ,UAE3C,IA3BS,WA4BL,OAAO,eACAH,EADP,eAEKC,EAAOnC,WAFZ,sBAGWkC,EAAMC,EAAOnC,aAHxB,CAIQ,CACIT,GAAI2C,EAAMC,EAAOnC,YAAY0C,OAC7BhC,MAAOyB,EAAOzB,MACdC,MAAOwB,EAAOxB,MACdU,WAAW,OAK3B,KAAKK,EAGD,OAFAU,aAAaE,QAAQ,QAASC,KAAKC,UAAUN,IAEtCA,EAEX,IA3CgB,kBA4CZ,OAAO,eACAA,EADP,eAEKC,EAAOnC,WAAa,KAG7B,IAhDY,cAiDR,OAAO,eACAkC,EADP,eAEKC,EAAOnC,WAAakC,EAAMC,EAAOnC,YAC7B2C,QAAO,SAAAvB,GAAI,OAAIA,EAAK7B,KAAO4C,EAAO5C,QAG/C,IAtDY,cAuDR,OAAO,eACA2C,EADP,eAEKC,EAAOnC,WAAakC,EAAMC,EAAOnC,YAAY4C,KAAI,SAACxB,EAAMyB,GAErD,OADAzB,EAAK7B,GAAKsD,EACHzB,OAInB,IA9DmB,qBA+Df,OAAO,eACAc,EADP,eAEKC,EAAOnC,WAAakC,EAAMC,EAAOnC,YAAY4C,KAAI,SAAAxB,GAI9C,OAHIA,EAAK7B,KAAO4C,EAAO5C,KACnB6B,EAAKC,WAAaD,EAAKC,WAEpBD,OAInB,IAxES,WA2EL,OAFA0B,MAAMZ,EAAMC,EAAOnC,YAAY+C,QAAQ,SAACC,EAAKC,GAAN,OAAeD,IAAOC,EAAKtC,QAAO,IAElEuB,EAEX,QACI,OAAOA,IAQRjC,EAAa,iBAAO,CAAEJ,KAAM6B,ICnFxBwB,eANO,SAAChB,EAAOiB,GAAR,MAAsB,CACxC9D,OAAQ6C,EAAMkB,QAAQD,EAASnD,YAC/BA,WAAYmD,EAASnD,WACrBoB,KAAM+B,EAAS/B,QAIf,CAACI,aDqFqB,SAACxB,EAAYT,GAAb,MAAqB,CAAEM,KA5F7B,cA4FgDG,aAAYT,OCrF7DU,aAAYwB,YDsFN,SAAAzB,GAAU,MAAK,CAAEH,KA5FtB,cA4FyCG,eCtFjBuB,mBDuFZ,SAACvB,EAAYT,GAAb,MAC3B,CAAEM,KA7FoB,qBA6FMG,aAAYT,QCzF9B2D,CACkD/B,GCAlDkC,EARA,SAAApE,GACX,OAAO,wBAAIC,UAAU,mBAEbD,EAAMI,OAAOuD,KAAI,SAAAxB,GAAI,OAAI,kBAACkC,EAAD,CAAmBlC,KAAMA,EAAMmC,IAAKnC,EAAK7B,GAAIS,WAAYf,EAAMe,kBCarFwD,EAfJ,SAAAvE,GACP,OAAO,yBAAKC,UAAU,4BAClB,kBAAC,EAAD,CACIqB,QAAStB,EAAMwE,UAAWzD,WAAYf,EAAMe,WAC5CQ,MAAOvB,EAAMuB,MAAOQ,WAAY/B,EAAM+B,WACtCf,WAAYhB,EAAMgB,WAAYF,gBAAiBd,EAAMc,gBACrDa,eAAgB3B,EAAM2B,eACtBV,QAASjB,EAAMiB,UAEdjB,EAAMI,OAAOqD,OACR,kBAAC,EAAD,CAAUrD,OAAQJ,EAAMI,OAAQW,WAAYf,EAAMe,aADjC,wBAAId,UAAU,aAAd,cCV7ByC,EAAY,CACdlB,KAAM,CACFC,MAAO,GACPC,MAAO,IAyBA+C,EApBM,WAAgC,IAA/BxB,EAA8B,uDAAtBP,EAAWQ,EAAW,uCAEhD,OAAQA,EAAOtC,MACX,IAde,iBAeX,OAAO,eACAqC,EADP,CAEIzB,KAAK,eAAMyB,EAAMzB,KAAb,eAAoB0B,EAAOwB,SAAWxB,EAAOyB,SAGzD,IAnBe,iBAoBX,OAAO,eACA1B,EADP,CAEIzB,KAAM,CAAEC,MAAO,GAAIC,MAAO,KAGlC,QACI,OAAOuB,IChBJgB,eANO,SAAChB,EAAOiB,GAAR,MAAsB,CACxCnD,WAAYmD,EAAS9D,OACrBA,OAAQ6C,EAAMkB,QAAQD,EAAS9D,QAC/BmB,MAAO0B,EAAM1B,SAIb,CAAEiD,UL+EiB,SAACzD,EAAYU,EAAOC,GAApB,MAClB,CAAEd,KA5FU,WA4FMG,aAAYU,QAAOC,UKhFzBV,aAAYe,WDqBL,SAAC2C,EAAUC,GAAX,MAAqB,CAAE/D,KAjCxB,iBAiC8C8D,WAAUC,SCrBtC7D,gBLmFZ,SAAAC,GAAU,MAAK,CAAEH,KA5FtB,kBA4F6CG,eKnFXY,eDsB9B,iBAAO,CAAEf,KAjCd,mBCWmDK,QLwFrD,SAAAF,GAAU,MAAK,CAACH,KA7FpB,WA6FoCG,gBKzFtCkD,CACsEM,GCCtEK,EATD,SAAA5E,GACV,OACI,yBAAKC,UAAU,QACX,kBAAC,EAAD,CAAQG,OAAQJ,EAAMI,OAAQF,aAAcF,EAAME,aAAcG,KAAML,EAAMK,OAC5E,kBAACwE,EAAD,CAAezE,OAAQJ,EAAMI,WCI1B0E,EATJ,SAAA9E,GACP,OACI,yBAAKC,UAAU,QACX,kBAAC,EAAD,CAAQwB,MAAM,gBAAgBvB,aAAa,2BAA2BG,KAAK,kBAC3E,wBAAIJ,UAAU,aAAd,wB,oECMN8E,E,4LAEEC,KAAKhF,MAAMiF,e,+BAIX,IAAIC,EAAY,SAACC,EAAM1D,GAAP,OAAiB,yBAAKxB,UAAU,OAAOmF,IAAKD,EAAME,IAAK5D,KAEvE,OAAQuD,KAAKhF,MAAMsF,MAAMC,OAAOnF,QAC5B,IAAK,SACD,OAAO,kBAAC,EAAD,CAASA,OAAQ4E,KAAKhF,MAAMsF,MAAMC,OAAOnF,OAC5CF,aAAa,wBAAwBG,KAAM6E,EAAUM,IAAY,YACzE,IAAK,UACD,OAAO,kBAAC,EAAD,CAASpF,OAAQ4E,KAAKhF,MAAMsF,MAAMC,OAAOnF,OAC5CF,aAAa,wBAAwBG,KAAM6E,EAAUO,IAAa,aAC1E,IAAK,QACD,OAAO,kBAAC,EAAD,CAASrF,OAAQ4E,KAAKhF,MAAMsF,MAAMC,OAAOnF,OAC5CF,aAAa,0BAA0BG,KAAM6E,EAAUQ,IAAW,WAC1E,IAAK,QACD,OAAO,kBAAC,EAAD,CAAStF,OAAQ4E,KAAKhF,MAAMsF,MAAMC,OAAOnF,OAC5CF,aAAa,yBAAyBG,KAAM6E,EAAUS,IAAW,WACzE,IAAK,QACD,OAAO,kBAAC,EAAD,CAASvF,OAAQ4E,KAAKhF,MAAMsF,MAAMC,OAAOnF,OAC5CF,aAAa,sBAAsBG,KAAK,UAChD,QACI,OAAO,kBAAC,EAAD,W,GAzBQuF,IAAMC,WAmCtB5B,eAJO,SAAAhB,GAAK,MAAK,CAC5BkB,QAASlB,EAAMkB,WAGqB,CAACc,WR8CjB,iBAAO,CAAErE,KA5Ff,eQ8CHqD,CAAwC6B,YAAWf,ICnCnDgB,MARf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOZ,KAAK,YAAYa,UAAWjB,MCIrBkB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASd,MACvB,2D,YCdAe,EAAWC,YAAgB,CAC7BnC,QAASnB,EACTzB,MAAOkD,IAKI8B,EAFDC,YAAYH,GCF1BI,IAASC,OACL,kBAAC,IAAD,CAAUH,MAAOA,GACb,kBAAC,EAAD,OACSI,SAASC,eAAe,SFyHnC,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.9646460c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/auchan.5a911c8b.png\";","module.exports = __webpack_public_path__ + \"static/media/velmart.bcee6b19.png\";","module.exports = __webpack_public_path__ + \"static/media/silpo.6402b432.png\";","module.exports = __webpack_public_path__ + \"static/media/novus.7931c6a4.png\";","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nlet Header = props => {\r\n    return (\r\n        <nav className={`navbar navbar-expand ${props.bgColorClass}`}>\r\n            <NavLink className=\"navbar-brand\" to={`/${props.market}`}>{props.logo}</NavLink>\r\n            \r\n                <div className=\"navbar-nav ml-auto\">\r\n                    <div className=\"nav-item dropdown\">\r\n                        <NavLink className=\"nav-link active dropdown-toggle\" to=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            Show markets   </NavLink>\r\n                        <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"navbarDropdown\">\r\n                            <NavLink className=\"dropdown-item\" to=\"/auchan\">Auchan</NavLink>\r\n                            <NavLink className=\"dropdown-item \" to=\"/velmart\">Velmart</NavLink>\r\n                            <NavLink className=\"dropdown-item \" to=\"/silpo\">Silpo</NavLink>\r\n                            <NavLink className=\"dropdown-item \" to=\"/novus\">Novus</NavLink>\r\n                            <NavLink className=\"dropdown-item \" to=\"/other\">Other</NavLink>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport default (props) => (\r\n    <div className=\"dropdown-menu\">\r\n        <button type=\"button\" className=\"dropdown-item\"\r\n            onClick={() => {\r\n                props.clearTodoListAC(props.marketName);\r\n                props.saveToLSAC();\r\n            }}>Clear</button>\r\n        <button type=\"button\" className=\"dropdown-item\"\r\n            onClick={() => {\r\n                props.calcSum(props.marketName)\r\n                }}>Sum</button>\r\n        <div role=\"separator\" className=\"dropdown-divider\"></div>\r\n        <button type=\"submit\" className=\"dropdown-item\">Submit</button>\r\n    </div>\r\n)","import React from 'react';\r\nimport AdditionalActions from './AdditionalActions/AdditionalActions';\r\n\r\nlet AddItem = props => {\r\n    return (\r\n        <form className=\"form row justify-content-around\"\r\n            onSubmit={event => {\r\n                event.preventDefault();\r\n                props.addItem(props.marketName, props.input.form.title, props.input.form.value);\r\n                props.onSubmitTodoAC();\r\n                props.saveToLSAC();\r\n            }} >\r\n            <input type=\"text\" className=\"form-control col\" placeholder=\"Product\" required\r\n                value={props.input.form.title}\r\n                onChange={event => props.onChangeAC('title', event.target.value)} />\r\n\r\n            <input type=\"number\" className=\"form-control col-2\" placeholder=\"Value\"\r\n                value={props.input.form.value}\r\n                onChange={event => props.onChangeAC('value', event.target.value)} />\r\n\r\n            <button type=\"button\" className=\"form-control col-2 col-md-1 btn btn-outline-secondary dropdown-toggle dropdown-toggle-split\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                <span className=\"sr-only\">Toggle Dropdown</span>\r\n            </button>\r\n\r\n            <AdditionalActions\r\n                clearTodoListAC={props.clearTodoListAC}\r\n                saveToLSAC={props.saveToLSAC}\r\n                marketName={props.marketName}\r\n                calcSum={props.calcSum}\r\n            />\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nexport default AddItem;","import React from 'react';\r\n\r\nlet TodoItem = props => {\r\n    return <li className={`list-group-item bg-light ${props.todo.completed && \"todo-completed\"}`}>\r\n            <div className=\"row justify-content-around align-items-center\">\r\n                <input type=\"checkbox\"\r\n                    className=\"item-element check col-1\"\r\n                    checked={props.todo.completed}\r\n                    onChange={event => {\r\n                        props.setTodoCompletedAC(props.marketName, props.todo.id)\r\n                        props.saveToLSAC();\r\n                    }} />\r\n\r\n                <div className=\"item-element text col\" >{props.todo.title}</div>\r\n                <div className=\"item-element value col-3\">{props.todo.value}</div>\r\n                <div className=\"item-element col-2 col-md-1 row justify-content-end\">\r\n                    <i className=\"fas fa-times remove-item\" onClick={() => {\r\n                        props.removeTodoAC(props.marketName, props.todo.id);\r\n                        props.setTodoIdAC(props.marketName);\r\n                        props.saveToLSAC();\r\n                    }}></i> </div>\r\n            </div>\r\n        </li>\r\n}\r\n\r\nexport default TodoItem;","const ADD_ITEM = 'ADD_ITEM';\r\nconst SAVE_TO_LS = 'SAVE_TO_LOCAL_STORAGE';\r\nconst SET_TODOS = 'SET_TODOS';\r\nconst CLEAR_TODO_LIST = 'CLEAR_TODO_LIST';\r\nconst REMOVE_TODO = 'REMOVE_TODO';\r\nconst SET_TODO_ID = 'SET_TODO_ID';\r\nconst SET_TODO_COMPLETED = 'SET_TODO_COMPLETED';\r\nconst CALC_SUM = 'CALC_SUM';\r\n\r\nconst initState = {\r\n    auchan: [],\r\n    velmart: [],\r\n    silpo: [],\r\n    novus: [],\r\n    other: []\r\n}\r\n\r\nconst marketsReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case SET_TODOS:\r\n            if (localStorage.getItem('todos') === null) {\r\n                localStorage.setItem('todos', JSON.stringify(state));\r\n                return state;\r\n            }\r\n\r\n            return JSON.parse(localStorage.getItem('todos'));\r\n\r\n        case ADD_ITEM:\r\n            return {\r\n                ...state,\r\n                [action.marketName]: [\r\n                    ...state[action.marketName],\r\n                    {\r\n                        id: state[action.marketName].length,\r\n                        title: action.title,\r\n                        value: action.value,\r\n                        completed: false\r\n                    }\r\n                ]\r\n            }\r\n\r\n        case SAVE_TO_LS:\r\n            localStorage.setItem('todos', JSON.stringify(state));\r\n\r\n            return state;\r\n\r\n        case CLEAR_TODO_LIST:\r\n            return {\r\n                ...state,\r\n                [action.marketName]: []\r\n            }\r\n\r\n        case REMOVE_TODO:\r\n            return {\r\n                ...state,\r\n                [action.marketName]: state[action.marketName]\r\n                    .filter(todo => todo.id !== action.id)\r\n            }\r\n\r\n        case SET_TODO_ID:\r\n            return {\r\n                ...state,\r\n                [action.marketName]: state[action.marketName].map((todo, index) => {\r\n                    todo.id = index;\r\n                    return todo;\r\n                })\r\n            }\r\n\r\n        case SET_TODO_COMPLETED:\r\n            return {\r\n                ...state,\r\n                [action.marketName]: state[action.marketName].map(todo => {\r\n                    if (todo.id === action.id) {\r\n                        todo.completed = !todo.completed;\r\n                    }\r\n                    return todo;\r\n                })\r\n            }\r\n\r\n        case CALC_SUM:\r\n            alert(state[action.marketName].reduce( (sum, item) => sum + +item.value, 0 ));\r\n\r\n            return state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default marketsReducer;\r\n\r\nexport let addItemAC = (marketName, title, value) =>\r\n    ({ type: ADD_ITEM, marketName, title, value })\r\nexport let saveToLSAC = () => ({ type: SAVE_TO_LS })\r\nexport let setTodosAC = () => ({ type: SET_TODOS })\r\nexport let clearTodoListAC = marketName => ({ type: CLEAR_TODO_LIST, marketName })\r\nexport let removeTodoAC = (marketName, id) => ({ type: REMOVE_TODO, marketName, id })\r\nexport let setTodoIdAC = marketName => ({ type: SET_TODO_ID, marketName })\r\nexport let setTodoCompletedAC = (marketName, id) =>\r\n    ({ type: SET_TODO_COMPLETED, marketName, id })\r\nexport let calcSum = marketName => ({type: CALC_SUM, marketName})","import { connect } from \"react-redux\";\r\nimport TodoItem from './TodoItem';\r\nimport { removeTodoAC, saveToLSAC, setTodoIdAC, setTodoCompletedAC } from \"../../../../../redux/marketsReducer\";\r\n\r\nlet mapStateToProps = (state, ownProps) => ({\r\n    market: state.markets[ownProps.marketName],\r\n    marketName: ownProps.marketName,\r\n    todo: ownProps.todo\r\n})\r\n\r\nexport default connect(mapStateToProps, \r\n    {removeTodoAC, saveToLSAC, setTodoIdAC, setTodoCompletedAC})(TodoItem);","import React from 'react';\r\nimport TodoItemContainer from './TodoItem/TodoItemContainer';\r\n\r\nlet TodoList = props => {\r\n    return <ul className=\"list-group mt-3\">\r\n        {\r\n            props.market.map(todo => <TodoItemContainer todo={todo} key={todo.id} marketName={props.marketName} />)\r\n        }\r\n    </ul>\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport AddItem from './AddItem/AddItem';\r\nimport TodoList from './TodoList/TodoList';\r\n\r\nlet Todo = props => {\r\n    return <div className=\"market-content container\">\r\n        <AddItem\r\n            addItem={props.addItemAC} marketName={props.marketName}\r\n            input={props.input} onChangeAC={props.onChangeAC}\r\n            saveToLSAC={props.saveToLSAC} clearTodoListAC={props.clearTodoListAC}\r\n            onSubmitTodoAC={props.onSubmitTodoAC}\r\n            calcSum={props.calcSum} />\r\n        {\r\n            !props.market.length ? <h1 className=\"display-4\">No todos</h1>\r\n                : <TodoList market={props.market} marketName={props.marketName} />\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Todo; ","const ON_CHANGE_FORM = 'ON-CHANGE-FORM';\r\nconst ON_SUBMIT_TODO = 'ON-SUBMIT-TODO';\r\n\r\nconst initState = {\r\n    form: {\r\n        title: '',\r\n        value: 0\r\n    }\r\n\r\n}\r\n\r\nconst inputReducer = (state = initState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ON_CHANGE_FORM:\r\n            return {\r\n                ...state,\r\n                form: { ...state.form, [action.dataName]: action.data }\r\n            }\r\n\r\n        case ON_SUBMIT_TODO:\r\n            return {\r\n                ...state,\r\n                form: { title: '', value: 0 }\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default inputReducer;\r\n\r\nexport let onChangeAC = (dataName, data) => ({ type: ON_CHANGE_FORM, dataName, data })\r\nexport let onSubmitTodoAC = () => ({ type: ON_SUBMIT_TODO })","import { connect } from \"react-redux\";\r\nimport Todo from './Todo';\r\nimport { addItemAC, saveToLSAC, clearTodoListAC, calcSum } from \"../../../redux/marketsReducer\";\r\nimport { onChangeAC, onSubmitTodoAC } from \"../../../redux/inputReducer\";\r\n\r\nlet mapStateToProps = (state, ownProps) => ({\r\n    marketName: ownProps.market,\r\n    market: state.markets[ownProps.market],\r\n    input: state.input\r\n});\r\n\r\nexport default connect(mapStateToProps, \r\n    { addItemAC, saveToLSAC, onChangeAC, clearTodoListAC, onSubmitTodoAC, calcSum })(Todo);","import React from 'react';\r\nimport Header from '../common/Header/Header';\r\nimport TodoContainer from './Todo/TodoContainer';\r\n\r\nlet Content = props => {\r\n    return (\r\n        <div className=\"home\">\r\n            <Header market={props.market} bgColorClass={props.bgColorClass} logo={props.logo}/>\r\n            <TodoContainer market={props.market} />\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Content;","import React from 'react';\r\nimport Header from '../../common/Header/Header';\r\n\r\nlet Home = props => {\r\n    return (\r\n        <div className=\"home\">\r\n            <Header title=\"Easy Purchase\" bgColorClass=\"navbar-dark bg-secondary\" logo=\"Easy Purchase\" />\r\n            <h1 className=\"display-3\">Easy Purchase v1.0</h1>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Home;","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Content from './Content';\r\nimport Home from './Home/Home';\r\nimport { setTodosAC } from '../../redux/marketsReducer';\r\n\r\nimport auchanLogo from './../../assets/images/auchan.png';\r\nimport velmartLogo from './../../assets/images/velmart.png';\r\nimport silpoLogo from './../../assets/images/silpo.png';\r\nimport novusLogo from './../../assets/images/novus.png';\r\n\r\n\r\nclass ContentContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.setTodosAC();\r\n    }\r\n\r\n    render() {\r\n        let createImg = (path, title) => <img className=\"logo\" src={path} alt={title} />\r\n        \r\n        switch (this.props.match.params.market) {\r\n            case 'auchan':\r\n                return <Content market={this.props.match.params.market} \r\n                    bgColorClass=\"navbar-dark bg-danger\" logo={createImg(auchanLogo, 'Auchan')} />;\r\n            case 'velmart':\r\n                return <Content market={this.props.match.params.market} \r\n                    bgColorClass=\"navbar-light bg-light\" logo={createImg(velmartLogo, 'Velmart')} />;\r\n            case 'silpo':\r\n                return <Content market={this.props.match.params.market} \r\n                    bgColorClass=\"navbar-light bg-warning\" logo={createImg(silpoLogo, 'Silpo')} />;\r\n            case 'novus':\r\n                return <Content market={this.props.match.params.market}\r\n                    bgColorClass=\"navbar-dark bg-success\" logo={createImg(novusLogo, 'Novus')} />;\r\n            case 'other':\r\n                return <Content market={this.props.match.params.market} \r\n                    bgColorClass=\"navbar-dark bg-dark\" logo=\"Other\" />;\r\n            default:\r\n                return <Home />\r\n        }\r\n\r\n    }\r\n}\r\n\r\nlet mapStateToProps = state => ({\r\n    markets: state.markets\r\n})\r\n\r\nexport default connect(mapStateToProps, {setTodosAC} )(withRouter(ContentContainer));\r\n","import React from 'react';\nimport './style/style.scss';\nimport { Route, HashRouter } from 'react-router-dom';\nimport ContentContainer from './components/Content/ContentContainer';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Route path=\"/:market?\" component={ContentContainer} />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers } from \"redux\";\r\nimport marketsReducer from \"./marketsReducer\";\r\nimport inputReducer from './inputReducer';\r\n\r\nconst reducers = combineReducers({\r\n    markets: marketsReducer,\r\n    input: inputReducer\r\n})\r\n\r\nconst store = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}