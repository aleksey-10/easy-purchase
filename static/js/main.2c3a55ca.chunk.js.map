{"version":3,"sources":["assets/images/auchan.png","assets/images/velmart.png","assets/images/silpo.png","assets/images/novus.png","components/common/Header/Header.jsx","components/Content/Todo/Form/AdditionalActions/AdditionalActions.jsx","components/Content/Todo/Form/Form.jsx","components/Content/Todo/TodoList/TodoItem/TodoItem.jsx","api/api.js","redux/marketsReducer.js","components/Content/Todo/TodoList/TodoItem/TodoItemContainer.jsx","components/Content/Todo/TodoList/TodoList.jsx","components/common/Preloader.jsx","components/Content/Todo/TodoList/TodoListContainer.jsx","components/Content/Todo/Todo.jsx","redux/inputReducer.js","components/Content/Todo/TodoContainer.jsx","components/Content/Content.jsx","components/Content/Home/Home.jsx","components/Content/ContentContainer.jsx","App.js","serviceWorker.js","redux/store.js","index.js"],"names":["module","exports","Header","props","className","bgColorClass","to","market","logo","id","role","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","type","value","onClick","calcSum","marketName","setCompletedAll","removeTodo","onSubmit","event","preventDefault","addTodo","input","form","title","onSubmitTodoAC","placeholder","required","onChange","onChangeAC","target","AdditionalActions","saveToLSAC","TodoItem","todo","completed","checked","setCompleted","instance","axios","baseURL","todoAPI","getTodos","get","then","response","data","postTodo","post","deleteTodo","delete","toggleCompleted","put","SAVE_TO_LS","initState","auchan","velmart","novus","silpo","fair","other","fetching","marketsReducer","state","action","markets","localStorage","setItem","JSON","stringify","filter","map","index","alert","reduce","sum","item","clearTodoListAC","removeTodoAC","dispatch","connect","ownProps","setTodoCompletedAC","TodoList","TodoItemContainer","key","Preloader","style","width","height","TodoListContainer","this","length","React","Component","Todo","Form","inputReducer","dataName","addTodoAC","name","allCompleted","toggleCompleteAll","Content","TodoContainer","Home","ContentContainer","setTodos","createImg","path","src","alt","match","params","auchanLogo","velmartLogo","silpoLogo","novusLogo","payload","Object","keys","withRouter","App","component","Boolean","window","location","hostname","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2c3a55ca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/auchan.5a911c8b.png\";","module.exports = __webpack_public_path__ + \"static/media/velmart.bcee6b19.png\";","module.exports = __webpack_public_path__ + \"static/media/silpo.6402b432.png\";","module.exports = __webpack_public_path__ + \"static/media/novus.7931c6a4.png\";","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nlet Header = props => {\r\n    return (\r\n        <nav className={`navbar navbar-expand ${props.bgColorClass}`}>\r\n            <NavLink className=\"navbar-brand\" to={`/${props.market}`}>{props.logo}</NavLink>\r\n            \r\n                <div className=\"navbar-nav ml-auto\">\r\n                    <div className=\"nav-item dropdown\">\r\n                        <NavLink className=\"nav-link active dropdown-toggle\" to=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            Show markets   </NavLink>\r\n                        <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"navbarDropdown\">\r\n                            <NavLink className=\"dropdown-item\" to=\"/auchan\">Auchan</NavLink>\r\n                            <NavLink className=\"dropdown-item \" to=\"/velmart\">Velmart</NavLink>\r\n                            <NavLink className=\"dropdown-item \" to=\"/silpo\">Silpo</NavLink>\r\n                            <NavLink className=\"dropdown-item \" to=\"/novus\">Novus</NavLink>\r\n                            <NavLink className=\"dropdown-item \" to=\"/fair\">Ярмарка</NavLink>\r\n                            <NavLink className=\"dropdown-item \" to=\"/other\">Other</NavLink>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport default (props) => (\r\n    <div className=\"dropdown-menu\">\r\n        <input type=\"submit\" className=\"dropdown-item\" value=\"Submit\" />\r\n       \r\n        <div role=\"separator\" className=\"dropdown-divider\"></div>\r\n       \r\n        <button type=\"button\" className=\"dropdown-item\"\r\n            onClick={() => props.calcSum(props.marketName)}>Total sum</button>\r\n        <button type=\"button\" className=\"dropdown-item\"\r\n            onClick={() => props.setCompletedAll(props.marketName, props.market)}>Completed all</button>\r\n        \r\n        <div role=\"separator\" className=\"dropdown-divider\"></div>\r\n        \r\n        <button type=\"button\" className=\"dropdown-item\"\r\n            onClick={() => {\r\n                props.removeTodo(props.marketName);\r\n            }}>Clear todos</button>\r\n    </div>\r\n)","import React from 'react';\r\nimport AdditionalActions from './AdditionalActions/AdditionalActions';\r\n\r\nexport default ({props}) => {\r\n    return (\r\n        <form className=\"form row justify-content-around\"\r\n            onSubmit={event => {\r\n                event.preventDefault();\r\n                props.addTodo(props.marketName, props.input.form.title, props.input.form.value);\r\n                props.onSubmitTodoAC();\r\n            }} >\r\n            <input type=\"text\" className=\"form-control col\" placeholder=\"Product\" required\r\n                value={props.input.form.title}\r\n                onChange={event => props.onChangeAC('title', event.target.value)} />\r\n\r\n            <input type=\"number\" className=\"form-control col-2\" placeholder=\"Value\"\r\n                value={props.input.form.value}\r\n                onChange={event => props.onChangeAC('value', event.target.value)} />\r\n\r\n            <button type=\"button\" className=\"form-control col-2 col-md-1 btn btn-outline-secondary dropdown-toggle dropdown-toggle-split\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                <span className=\"sr-only\">Toggle Dropdown</span>\r\n            </button>\r\n\r\n            <AdditionalActions\r\n                removeTodo={props.removeTodo}\r\n                saveToLSAC={props.saveToLSAC}\r\n                marketName={props.marketName}\r\n                market={props.market}\r\n                calcSum={props.calcSum}\r\n                setCompletedAll={props.setCompletedAll}\r\n            />\r\n        </form>\r\n\r\n    )\r\n}","import React from 'react';\r\n\r\nlet TodoItem = props => {\r\n    return <li className={`list-group-item bg-light ${props.todo.completed && \"todo-completed\"}`}>\r\n            <div className=\"row justify-content-around align-items-center\">\r\n                <input type=\"checkbox\"\r\n                    className=\"item-element check col-1\"\r\n                    checked={props.todo.completed}\r\n                    onChange={() => {\r\n                        props.setCompleted(props.marketName, props.todo)\r\n                    }} />\r\n\r\n                <div className=\"item-element text col\" >{props.todo.title}</div>\r\n                <div className=\"item-element value col-3\">{props.todo.value}</div>\r\n                <div className=\"item-element col-2 col-md-1 row justify-content-center\">\r\n                    <i className=\"fas fa-times remove-item\" onClick={() => {\r\n                        props.removeTodo(props.marketName, props.todo.id);\r\n                    }}></i> </div>\r\n            </div>\r\n        </li>\r\n}\r\n\r\nexport default TodoItem;","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://easy-purchase-e225b.firebaseio.com/\"\r\n});\r\n\r\nconst todoAPI = {\r\n    getTodos() {\r\n        return instance.get('/markets.json').then(response => response.data)\r\n    },\r\n\r\n    postTodo(marketName, title, value) {\r\n        return instance.post(`markets/${marketName}.json`, { title, value, completed: false })\r\n            .then(response => response.data);\r\n    },\r\n\r\n    deleteTodo(marketName, id) {\r\n        return instance.delete(`markets/${marketName}/${id}.json`)\r\n    },\r\n\r\n    toggleCompleted(marketName, id, completed) {\r\n        return instance.put(`markets/${marketName}/${id}/completed.json`, completed  )\r\n    }\r\n};\r\n\r\nexport default todoAPI;\r\n\r\n","import todoAPI from \"../api/api\";\r\n\r\nconst ADD_TODO = 'ADD_TODO';\r\nconst SAVE_TO_LS = 'SAVE_TO_LOCAL_STORAGE';\r\nconst SET_TODOS = 'SET_TODOS';\r\nconst CLEAR_TODO_LIST = 'CLEAR_TODO_LIST';\r\nconst REMOVE_TODO = 'REMOVE_TODO';\r\nconst SET_TODO_ID = 'SET_TODO_ID';\r\nconst SET_TODO_COMPLETED = 'SET_TODO_COMPLETED';\r\nconst CALC_SUM = 'CALC_SUM';\r\nconst TOGGLE_FETCHING = 'TOGGLE_FETCHING';\r\nconst COMPLETED_ALL = 'COMPLETED_ALL';\r\n\r\nconst initState = {\r\n    auchan: [],\r\n    velmart: [],\r\n    novus: [],\r\n    silpo: [],\r\n    fair: [],\r\n    other: [],\r\n    fetching: true\r\n}\r\n\r\nconst marketsReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case SET_TODOS:\r\n            return {\r\n                ...state,\r\n                ...action.markets\r\n            }\r\n\r\n        case ADD_TODO:\r\n            return {\r\n                ...state,\r\n                [action.marketName]: [\r\n                    ...state[action.marketName],\r\n                    action.todo\r\n                ]\r\n            }\r\n\r\n        case SAVE_TO_LS:\r\n            localStorage.setItem('todos', JSON.stringify(state));\r\n\r\n            return state;\r\n\r\n        case CLEAR_TODO_LIST:\r\n            return {\r\n                ...state,\r\n                [action.marketName]: []\r\n            }\r\n\r\n        case REMOVE_TODO:\r\n            return {\r\n                ...state,\r\n                [action.marketName]: state[action.marketName]\r\n                    .filter(todo => todo.id !== action.id)\r\n            }\r\n\r\n        case SET_TODO_ID:\r\n            return {\r\n                ...state,\r\n                [action.marketName]: state[action.marketName].map((todo, index) => {\r\n                    todo.id = index;\r\n                    return todo;\r\n                })\r\n            }\r\n\r\n        case SET_TODO_COMPLETED:\r\n            return {\r\n                ...state,\r\n                [action.marketName]: state[action.marketName].map(todo => {\r\n                    if (todo.id === action.id) {\r\n                        todo.completed = !todo.completed;\r\n                    }\r\n                    return todo;\r\n                })\r\n            }\r\n\r\n        case CALC_SUM:\r\n            alert(state[action.marketName].reduce((sum, item) => sum + +item.value, 0));\r\n\r\n            return state;\r\n\r\n        case TOGGLE_FETCHING:\r\n            return { ...state, fetching: !state.fetching }\r\n\r\n        case COMPLETED_ALL:\r\n            return {\r\n                ...state,\r\n                [action.marketName]: state[action.marketName].map(todo => {\r\n                    todo.completed = action.completed;\r\n                    return todo;\r\n                })\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default marketsReducer;\r\n\r\nexport let addTodoAC = (marketName, todo) => ({ type: ADD_TODO, marketName, todo })\r\nexport let saveToLSAC = () => ({ type: SAVE_TO_LS })\r\nexport let setTodoAC = (markets) => ({ type: SET_TODOS, markets })\r\nexport let clearTodoListAC = marketName => ({ type: CLEAR_TODO_LIST, marketName })\r\nexport let removeTodoAC = (marketName, id) => ({ type: REMOVE_TODO, marketName, id })\r\nexport let setTodoCompletedAC = (marketName, id) =>\r\n    ({ type: SET_TODO_COMPLETED, marketName, id })\r\nexport let calcSum = marketName => ({ type: CALC_SUM, marketName })\r\nexport let toggleFetching = () => ({ type: TOGGLE_FETCHING })\r\nexport let toggleCompleteAll = (marketName, completed) => ({ type: COMPLETED_ALL, marketName, completed })\r\n\r\nexport const setTodos = () => dispatch => {\r\n    todoAPI.getTodos().then(data => {\r\n        if (data !== null) {\r\n\r\n            const payload = {};\r\n\r\n            for (let marketName in data) {\r\n                payload[marketName] = Object.keys(data[marketName]).map(key => ({\r\n                    ...data[marketName][key],\r\n                    id: key\r\n                }))\r\n            }\r\n\r\n            dispatch(setTodoAC(payload));\r\n        }\r\n\r\n        dispatch(toggleFetching());\r\n    });\r\n}\r\n\r\nexport const addTodo = (marketName, title, value) => dispatch => {\r\n    todoAPI.postTodo(marketName, title, value)\r\n        .then(data => {\r\n            dispatch(addTodoAC(marketName, { title, value, id: data.name, completed: false }))\r\n        })\r\n}\r\n\r\nexport const removeTodo = (marketName, id = '') => dispatch => {\r\n    todoAPI.deleteTodo(marketName, id);\r\n\r\n    !id ? dispatch(clearTodoListAC(marketName)) : dispatch(removeTodoAC(marketName, id));\r\n}\r\n\r\nexport const setCompleted = (marketName, todo) => dispatch => {\r\n    todoAPI.toggleCompleted(marketName, todo.id, !todo.completed)\r\n\r\n    dispatch(setTodoCompletedAC(marketName, todo.id))\r\n}\r\n\r\nexport const setCompletedAll = (marketName, market) => dispatch => {\r\n\r\n    let allCompleted = market.filter(todo => !todo.completed).length;\r\n\r\n    dispatch(toggleCompleteAll(marketName, allCompleted));\r\n\r\n    market.map(todo => {\r\n        todoAPI.toggleCompleted(marketName, todo.id, allCompleted)\r\n    })\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport TodoItem from './TodoItem';\r\nimport { removeTodo, setCompleted } from \"../../../../../redux/marketsReducer\";\r\n\r\n\r\nlet mapStateToProps = (state, ownProps) => ({\r\n    markets: state.markets,\r\n    market: state.markets[ownProps.marketName],\r\n    marketName: ownProps.marketName,\r\n    todo: ownProps.todo\r\n})\r\n\r\nexport default connect(mapStateToProps,\r\n    { removeTodo, setCompleted })(TodoItem);","import React from 'react';\r\nimport TodoItemContainer from './TodoItem/TodoItemContainer';\r\n\r\nlet TodoList = props => {\r\n    return <ul className=\"list-group mt-3\">\r\n        {\r\n            props.market.map(todo => <TodoItemContainer todo={todo} key={todo.id} marketName={props.marketName} />)\r\n        }\r\n    </ul>\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\nlet Preloader = () => {\r\n    return <div className=\"d-flex justify-content-center mt-4\">\r\n        <div className=\"spinner-border text-secondary\" style={{width: '3rem', height: '3rem'}} role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport TodoList from './TodoList';\r\nimport Preloader from './../../../common/Preloader';\r\n\r\nclass TodoListContainer extends React.Component {\r\n    render() {\r\n        return (this.props.markets.fetching) ? <Preloader /> : <>{\r\n            !this.props.market.length ? <h1 className=\"display-4\">No todos</h1>\r\n                : <TodoList market={this.props.market} marketName={this.props.marketName} />\r\n        }</>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    markets: state.markets,\r\n    market: state.markets[ownProps.marketName],\r\n    marketName: ownProps.marketName\r\n})\r\n\r\nexport default connect(mapStateToProps)(TodoListContainer);","import React from 'react';\r\nimport Form from './Form/Form';\r\nimport TodoListContainer from './TodoList/TodoListContainer';\r\n\r\nlet Todo = props => {\r\n    return <div className=\"market-content container\">\r\n        <Form props={props} />\r\n\r\n        <TodoListContainer market={props.market} marketName={props.marketName} />\r\n    </div>\r\n}\r\n\r\nexport default Todo; ","const ON_CHANGE_FORM = 'ON-CHANGE-FORM';\r\nconst ON_SUBMIT_TODO = 'ON-SUBMIT-TODO';\r\n\r\nconst initState = {\r\n    form: {\r\n        title: '',\r\n        value: 0\r\n    }\r\n\r\n}\r\n\r\nconst inputReducer = (state = initState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ON_CHANGE_FORM:\r\n            return {\r\n                ...state,\r\n                form: { ...state.form, [action.dataName]: action.data }\r\n            }\r\n\r\n        case ON_SUBMIT_TODO:\r\n            return {\r\n                ...state,\r\n                form: { title: '', value: 0 }\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default inputReducer;\r\n\r\nexport let onChangeAC = (dataName, data) => ({ type: ON_CHANGE_FORM, dataName, data })\r\nexport let onSubmitTodoAC = () => ({ type: ON_SUBMIT_TODO })","\r\nimport { connect } from \"react-redux\";\r\nimport Todo from './Todo';\r\nimport { addTodo, removeTodo, calcSum, setCompletedAll } from \"../../../redux/marketsReducer\";\r\nimport { onChangeAC, onSubmitTodoAC } from \"../../../redux/inputReducer\";\r\n\r\n\r\nlet mapStateToProps = (state, ownProps) => ({\r\n    marketName: ownProps.market,\r\n    market: state.markets[ownProps.market],\r\n    markets: state.markets,\r\n    input: state.input\r\n});\r\n\r\nexport default connect(mapStateToProps, \r\n    {  onChangeAC, removeTodo, onSubmitTodoAC, calcSum, addTodo, setCompletedAll})(Todo);","import React from 'react';\r\nimport Header from '../common/Header/Header';\r\nimport TodoContainer from './Todo/TodoContainer';\r\n\r\nlet Content = props => {\r\n    return (\r\n        <div className=\"home\">\r\n            <Header market={props.market} bgColorClass={props.bgColorClass} logo={props.logo}/>\r\n            <TodoContainer market={props.market} />\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Content;","import React from 'react';\r\nimport Header from '../../common/Header/Header';\r\n\r\nlet Home = props => {\r\n    return (\r\n        <div className=\"home\">\r\n            <Header title=\"Easy Purchase\" bgColorClass=\"navbar-dark bg-secondary\" logo=\"Easy Purchase\" />\r\n            <h1 className=\"display-3\">Easy Purchase v1.0</h1>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Home;","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Content from './Content';\r\nimport Home from './Home/Home';\r\nimport { setTodos } from './../../redux/marketsReducer';\r\n\r\nimport auchanLogo from './../../assets/images/auchan.png';\r\nimport velmartLogo from './../../assets/images/velmart.png';\r\nimport silpoLogo from './../../assets/images/silpo.png';\r\nimport novusLogo from './../../assets/images/novus.png';\r\n\r\n\r\nclass ContentContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.setTodos();\r\n    }\r\n\r\n    render() {\r\n        let createImg = (path, title) => <img className=\"logo\" src={path} alt={title} />\r\n\r\n        switch (this.props.match.params.market) {\r\n            case 'auchan':\r\n                return <Content market={this.props.match.params.market}\r\n                    bgColorClass=\"navbar-dark bg-danger\" logo={createImg(auchanLogo, 'Auchan')} />;\r\n            case 'velmart':\r\n                return <Content market={this.props.match.params.market}\r\n                    bgColorClass=\"navbar-light bg-light\" logo={createImg(velmartLogo, 'Velmart')} />;\r\n            case 'silpo':\r\n                return <Content market={this.props.match.params.market}\r\n                    bgColorClass=\"navbar-light bg-warning\" logo={createImg(silpoLogo, 'Silpo')} />;\r\n            case 'novus':\r\n                return <Content market={this.props.match.params.market}\r\n                    bgColorClass=\"navbar-dark bg-success\" logo={createImg(novusLogo, 'Novus')} />;\r\n            case 'fair':\r\n                return <Content market={this.props.match.params.market}\r\n                    bgColorClass=\"navbar-dark bg-secondary\" logo=\"ЯРМАРКА\" />\r\n            case 'other':\r\n                return <Content market={this.props.match.params.market}\r\n                    bgColorClass=\"navbar-dark bg-dark\" logo=\"\" />;\r\n            default:\r\n                return <Home />\r\n        }\r\n\r\n    }\r\n}\r\n\r\nlet mapStateToProps = state => ({\r\n    markets: state.markets\r\n})\r\n\r\nexport default connect(mapStateToProps, {setTodos})(withRouter(ContentContainer));\r\n","import React from 'react';\nimport './style/style.scss';\nimport { Route, HashRouter } from 'react-router-dom';\nimport ContentContainer from './components/Content/ContentContainer';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Route path=\"/:market?\" component={ContentContainer} />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport marketsReducer from \"./marketsReducer\";\r\nimport inputReducer from './inputReducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nconst reducers = combineReducers({\r\n    markets: marketsReducer,\r\n    input: inputReducer\r\n})\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}