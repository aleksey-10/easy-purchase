{"version":3,"sources":["assets/images/auchan.png","assets/images/velmart.png","assets/images/silpo.png","assets/images/novus.png","components/common/Header/Header.jsx","components/Content/Todo/AddItem/AddItem.jsx","components/Content/Todo/TodoList/TodoItem/TodoItem.jsx","redux/marketsReducer.js","components/Content/Todo/TodoList/TodoItem/TodoItemContainer.jsx","components/Content/Todo/TodoList/TodoList.jsx","components/Content/Todo/Todo.jsx","redux/inputReducer.js","components/Content/Todo/TodoContainer.jsx","components/Content/Content.jsx","components/Content/Home/Home.jsx","components/Content/ContentContainer.jsx","App.js","serviceWorker.js","redux/store.js","index.js"],"names":["module","exports","Header","props","className","bgColorClass","to","logo","id","role","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","AddItem","onSubmit","event","preventDefault","addItem","marketName","input","title","value","onSubmitTodoAC","saveToLSAC","type","placeholder","required","onChange","onChangeAC","target","onClick","clearTodoListAC","TodoItem","todo","completed","checked","setTodoCompletedAC","removeTodoAC","setTodoIdAC","SAVE_TO_LS","initState","auchan","velmart","silpo","novus","other","marketsReducer","prevState","action","localStorage","getItem","setItem","JSON","stringify","parse","length","filter","map","index","connect","state","ownProps","market","markets","TodoList","TodoItemContainer","key","Todo","addItemAC","inputReducer","dataName","data","Content","TodoContainer","Home","ContentContainer","this","setTodosAC","createImg","path","src","alt","match","params","auchanLogo","velmartLogo","silpoLogo","novusLogo","React","Component","withRouter","App","component","Boolean","window","location","hostname","reducers","combineReducers","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d4aa8c13.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/auchan.5a911c8b.png\";","module.exports = __webpack_public_path__ + \"static/media/velmart.bcee6b19.png\";","module.exports = __webpack_public_path__ + \"static/media/silpo.6402b432.png\";","module.exports = __webpack_public_path__ + \"static/media/novus.7931c6a4.png\";","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nlet Header = props => {\r\n    return (\r\n        <nav className={`navbar navbar-expand ${props.bgColorClass}`}>\r\n            <NavLink className=\"navbar-brand\" to=\"/\">{props.logo}</NavLink>\r\n            \r\n                <div className=\"navbar-nav ml-auto\">\r\n                    <div className=\"nav-item dropdown\">\r\n                        <NavLink className=\"nav-link active dropdown-toggle\" to=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            Show markets   </NavLink>\r\n                        <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"navbarDropdown\">\r\n                            <NavLink className=\"dropdown-item\" to=\"/auchan\">Auchan</NavLink>\r\n                            <NavLink className=\"dropdown-item \" to=\"/velmart\">Velmart</NavLink>\r\n                            <NavLink className=\"dropdown-item \" to=\"/silpo\">Silpo</NavLink>\r\n                            <NavLink className=\"dropdown-item \" to=\"/novus\">Novus</NavLink>\r\n                            <NavLink className=\"dropdown-item \" to=\"/other\">Other</NavLink>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nlet AddItem = props => {\r\n    return (\r\n        <form className=\"form row justify-content-around\"\r\n            onSubmit={event => {\r\n                event.preventDefault();\r\n                props.addItem(props.marketName, props.input.title, props.input.value);\r\n                props.onSubmitTodoAC();\r\n                props.saveToLSAC();\r\n            }} >\r\n            <input type=\"text\" className=\"form-control col-7 col-md-5\" placeholder=\"Product\" required\r\n                value={props.input.title}\r\n                onChange={event => props.onChangeAC('title', event.target.value)} />\r\n            <input type=\"number\" className=\"form-control col-4 col-md-2\" placeholder=\"Value\"\r\n                value={props.input.value}\r\n                onChange={event => props.onChangeAC('value', event.target.value)} />\r\n            <input type=\"submit\" className=\"form-control col-7 col-md-2 btn btn-info\" value=\"Submit\" />\r\n            <input type=\"button\" className=\"form-control col-4 col-md-2 btn btn-secondary\" value=\"Clear\"\r\n                onClick={() => {\r\n                    props.clearTodoListAC(props.marketName);\r\n                    props.saveToLSAC(); \r\n                }} />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddItem;","import React from 'react';\r\n\r\nlet TodoItem = props => {\r\n    return <li className={`list-group-item ${props.todo.completed && \"todo-completed\"}`}>\r\n        <div className=\"row justify-content-around align-items-center\">\r\n            <input type=\"checkbox\" \r\n                className=\"item-element check col-1\"\r\n                checked={props.todo.completed} \r\n                onChange={event => {\r\n                    props.setTodoCompletedAC(props.marketName, props.todo.id)\r\n                    props.saveToLSAC();\r\n                    }}/>\r\n\r\n            <div className=\"item-element text col\" >{props.todo.title}</div>\r\n            <div className=\"item-element value col-3\">{props.todo.value}</div>\r\n            <div className=\"item-element del col-1 remove-item\"\r\n                onClick={() => {\r\n                    props.removeTodoAC(props.marketName, props.todo.id);\r\n                    props.setTodoIdAC(props.marketName);\r\n                    props.saveToLSAC();\r\n                }}> <i className=\"fas fa-trash\"></i> </div>\r\n        </div>\r\n\r\n    </li>\r\n}\r\n\r\nexport default TodoItem;","const ADD_ITEM = 'ADD-ITEM';\r\nconst SAVE_TO_LS = 'SAVE-TO-LOCAL-STORAGE';\r\nconst SET_TODOS = 'SET-TODOS';\r\nconst CLEAR_TODO_LIST = 'CLEAR-TODO-LIST';\r\nconst REMOVE_TODO = 'REMOVE-TODO';\r\nconst SET_TODO_ID = 'SET-TODO-ID';\r\nconst SET_TODO_COMPLETED = 'SET-TODO-COMPLETED';\r\n\r\nconst initState = {\r\n    auchan: [],\r\n    velmart: [],\r\n    silpo: [],\r\n    novus: [],\r\n    other: []\r\n}\r\n\r\nconst marketsReducer = (prevState = initState, action) => {\r\n    switch (action.type) {\r\n        case SET_TODOS:\r\n            if (localStorage.getItem('todos') === null) {\r\n                localStorage.setItem('todos', JSON.stringify(prevState));\r\n                return prevState;\r\n            }\r\n\r\n            return JSON.parse(localStorage.getItem('todos'));\r\n\r\n        case ADD_ITEM:\r\n            return {\r\n                ...prevState,\r\n                [action.marketName]: [\r\n                    ...prevState[action.marketName],\r\n                    {\r\n                        id: prevState[action.marketName].length,\r\n                        title: action.title,\r\n                        value: action.value,\r\n                        completed: false\r\n                    }\r\n                ]\r\n            }\r\n\r\n        case SAVE_TO_LS:\r\n            localStorage.setItem('todos', JSON.stringify(prevState));\r\n\r\n            return prevState;\r\n\r\n        case CLEAR_TODO_LIST:\r\n            return {\r\n                ...prevState,\r\n                [action.marketName]: []\r\n            }\r\n\r\n        case REMOVE_TODO:\r\n            return {\r\n                ...prevState,\r\n                [action.marketName]: prevState[action.marketName]\r\n                    .filter(todo => todo.id !== action.id)\r\n            }\r\n\r\n        case SET_TODO_ID:\r\n            return {\r\n                ...prevState,\r\n                [action.marketName]: prevState[action.marketName].map((todo, index) => {\r\n                    todo.id = index;\r\n                    return todo;\r\n                })\r\n            }\r\n\r\n        case SET_TODO_COMPLETED:\r\n            return {\r\n                ...prevState,\r\n                [action.marketName]: prevState[action.marketName].map(todo => {\r\n                    if (todo.id === action.id) {\r\n                        todo.completed = !todo.completed;\r\n                    }\r\n                    return todo;\r\n                })\r\n            }\r\n\r\n\r\n        default:\r\n            return prevState;\r\n    }\r\n}\r\n\r\nexport default marketsReducer;\r\n\r\nexport let addItemAC = (marketName, title, value) =>\r\n    ({ type: ADD_ITEM, marketName, title, value })\r\nexport let saveToLSAC = () => ({ type: SAVE_TO_LS })\r\nexport let setTodosAC = () => ({ type: SET_TODOS })\r\nexport let clearTodoListAC = marketName => ({ type: CLEAR_TODO_LIST, marketName })\r\nexport let removeTodoAC = (marketName, id) => ({ type: REMOVE_TODO, marketName, id })\r\nexport let setTodoIdAC = marketName => ({ type: SET_TODO_ID, marketName })\r\nexport let setTodoCompletedAC = (marketName, id) =>\r\n    ({ type: SET_TODO_COMPLETED, marketName, id })","import { connect } from \"react-redux\";\r\nimport TodoItem from './TodoItem';\r\nimport { removeTodoAC, saveToLSAC, setTodoIdAC, setTodoCompletedAC } from \"../../../../../redux/marketsReducer\";\r\n\r\nlet mapStateToProps = (state, ownProps) => ({\r\n    market: state.markets[ownProps.marketName],\r\n    marketName: ownProps.marketName,\r\n    todo: ownProps.todo\r\n})\r\n\r\nexport default connect(mapStateToProps, \r\n    {removeTodoAC, saveToLSAC, setTodoIdAC, setTodoCompletedAC})(TodoItem);","import React from 'react';\r\nimport TodoItemContainer from './TodoItem/TodoItemContainer';\r\n\r\nlet TodoList = props => {\r\n    return <ul className=\"list-group\">\r\n        {\r\n            props.market.map(todo =>\r\n                <TodoItemContainer todo={todo} key={todo.id} marketName={props.marketName} />)\r\n        }\r\n    </ul>\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport AddItem from './AddItem/AddItem';\r\nimport TodoList from './TodoList/TodoList';\r\n\r\nlet Todo = props => {\r\n    return <div className=\"market-content container\">\r\n        <AddItem\r\n            addItem={props.addItemAC} marketName={props.marketName}\r\n            input={props.input} onChangeAC={props.onChangeAC}\r\n            saveToLSAC={props.saveToLSAC} clearTodoListAC={props.clearTodoListAC}\r\n            onSubmitTodoAC={props.onSubmitTodoAC} />\r\n        {\r\n            !props.market.length ? <h1 className=\"display-4\">No todos</h1>\r\n                : <TodoList market={props.market} marketName={props.marketName} />\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Todo; ","const ON_CHANGE = 'ON-CHANGE-TITLE';\r\nconst ON_SUBMIT_TODO = 'ON-SUBMIT-TODO';\r\n\r\nconst initState = {\r\n    title: '',\r\n    value: 0\r\n}\r\n\r\nconst inputReducer = (prevState = initState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ON_CHANGE:\r\n            return {\r\n                ...prevState,\r\n                [action.dataName]: action.data\r\n            }\r\n\r\n        case ON_SUBMIT_TODO:\r\n            return {\r\n                title: '',\r\n                value: 0\r\n            }\r\n\r\n        default:\r\n            return prevState;\r\n    }\r\n}\r\n\r\nexport default inputReducer;\r\n\r\nexport let onChangeAC = (dataName, data) => ({ type: ON_CHANGE, dataName, data })\r\nexport let onSubmitTodoAC = () => ({ type: ON_SUBMIT_TODO })","import { connect } from \"react-redux\";\r\nimport Todo from './Todo';\r\nimport { addItemAC, saveToLSAC, clearTodoListAC } from \"../../../redux/marketsReducer\";\r\nimport { onChangeAC, onSubmitTodoAC } from \"../../../redux/inputReducer\";\r\n\r\nlet mapStateToProps = (state, ownProps) => ({\r\n    marketName: ownProps.market,\r\n    market: state.markets[ownProps.market],\r\n    input: state.input\r\n});\r\nexport default connect(mapStateToProps, \r\n    { addItemAC, saveToLSAC, onChangeAC, clearTodoListAC, onSubmitTodoAC })(Todo);","import React from 'react';\r\nimport Header from '../common/Header/Header';\r\nimport TodoContainer from './Todo/TodoContainer';\r\n\r\nlet Content = props => {\r\n    return (\r\n        <div className=\"home\">\r\n            <Header title={props.title} bgColorClass={props.bgColorClass} logo={props.logo}/>\r\n            <TodoContainer market={props.market} />\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Content;","import React from 'react';\r\nimport Header from '../../common/Header/Header';\r\n\r\nlet Home = props => {\r\n    return (\r\n        <div className=\"home\">\r\n            <Header title=\"Easy Purchase\" bgColorClass=\"navbar-dark bg-secondary\" logo=\"Easy Purchase\" />\r\n            <h1 className=\"display-3\">Easy Purchase v1.0</h1>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Home;","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Content from './Content';\r\nimport Home from './Home/Home';\r\nimport { setTodosAC } from '../../redux/marketsReducer';\r\n\r\nimport auchanLogo from './../../assets/images/auchan.png';\r\nimport velmartLogo from './../../assets/images/velmart.png';\r\nimport silpoLogo from './../../assets/images/silpo.png';\r\nimport novusLogo from './../../assets/images/novus.png';\r\n\r\n\r\nclass ContentContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.setTodosAC();\r\n    }\r\n\r\n    render() {\r\n        let createImg = (path, title) => <img className=\"logo\" src={path} alt={title} />\r\n        \r\n        switch (this.props.match.params.market) {\r\n            case 'auchan':\r\n                return <Content market={this.props.match.params.market} title=\"Auchan\"\r\n                    bgColorClass=\"navbar-dark bg-danger\" logo={createImg(auchanLogo, 'Auchan')} />;\r\n            case 'velmart':\r\n                return <Content market={this.props.match.params.market} title=\"Velmart\"\r\n                    bgColorClass=\"navbar-light bg-light\" logo={createImg(velmartLogo, 'Velmart')} />;\r\n            case 'silpo':\r\n                return <Content market={this.props.match.params.market} title=\"Silpo\"\r\n                    bgColorClass=\"navbar-light bg-warning\" logo={createImg(silpoLogo, 'Silpo')} />;\r\n            case 'novus':\r\n                return <Content market={this.props.match.params.market} title=\"Novus\"\r\n                    bgColorClass=\"navbar-dark bg-success\" logo={createImg(novusLogo, 'Novus')} />;\r\n            case 'other':\r\n                return <Content market={this.props.match.params.market} title=\"Other\"\r\n                    bgColorClass=\"navbar-dark bg-dark\" logo=\"Other\" />;\r\n            default:\r\n                return <Home />\r\n        }\r\n\r\n    }\r\n}\r\n\r\nlet mapStateToProps = state => ({\r\n    markets: state.markets\r\n})\r\n\r\nexport default connect(mapStateToProps, {setTodosAC} )(withRouter(ContentContainer));\r\n","import React from 'react';\nimport './style/style.css';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport ContentContainer from './components/Content/ContentContainer';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Route path=\"/:market?\" component={ContentContainer} />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers } from \"redux\";\r\nimport marketsReducer from \"./marketsReducer\";\r\nimport inputReducer from './inputReducer';\r\n\r\nconst reducers = combineReducers({\r\n    markets: marketsReducer,\r\n    input: inputReducer\r\n})\r\n\r\nconst store = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}